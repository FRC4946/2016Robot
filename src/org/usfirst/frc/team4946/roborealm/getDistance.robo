<head><version>2.79.16</version></head>
<Load_Image disabled>
  <filename>.\Target\0.jpg</filename>
  <frame_delay>10000</frame_delay>
  <load_destination>2</load_destination>
  <load_numbered_images>FALSE</load_numbered_images>
  <loop_playback>1</loop_playback>
  <monitor_folder>FALSE</monitor_folder>
  <numerical_sort>TRUE</numerical_sort>
  <page_number>1</page_number>
  <recursive>TRUE</recursive>
  <reload_on_change>FALSE</reload_on_change>
</Load_Image>
<Axis_Internet_Camera>
  <auto_back_light>TRUE</auto_back_light>
  <auto_exposure>FALSE</auto_exposure>
  <auto_white_balance>TRUE</auto_white_balance>
  <brightness_value>21</brightness_value>
  <camera_type>1</camera_type>
  <color_level_value>50</color_level_value>
  <compression_index>2</compression_index>
  <contrast_value>100</contrast_value>
  <ip_address>10.49.46.20</ip_address>
  <is_active>TRUE</is_active>
  <mirrot>FALSE</mirrot>
  <password>FRC</password>
  <port>80</port>
  <resolution>800x600</resolution>
  <sharpness_value>100</sharpness_value>
  <username>FRC</username>
</Axis_Internet_Camera>
<Radial_Distortion disabled>
  <center_x>0.5</center_x>
  <center_y>0.5</center_y>
  <coeff_a>-1121</coeff_a>
  <coeff_b>0.525</coeff_b>
  <coeff_c>0.0</coeff_c>
  <coeff_d>0.0</coeff_d>
  <coeff_e>0.0</coeff_e>
  <crop_image>FALSE</crop_image>
  <grayscale>FALSE</grayscale>
  <image_height>600</image_height>
  <image_width>800</image_width>
  <scale>950</scale>
</Radial_Distortion>
<Marker>
  <include_graphics>0</include_graphics>
  <name>De-Fisheyed</name>
  <revert_to>Current</revert_to>
</Marker>
<RGB_Filter>
  <channel>2</channel>
  <hue_value>50</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>100</min_value>
  <result_type>1</result_type>
</RGB_Filter>
<Marker>
  <include_graphics>0</include_graphics>
  <name>Thresholded</name>
  <revert_to>Current</revert_to>
</Marker>
<Blob_Filter>
  <create_blob_array_variable>TRUE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>8</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <minimum_size>200</minimum_size>
        <weight_threshold>0.5</weight_threshold>
      </filter>
      <filter:2>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>56</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>1</invert_threshold>
        <weight_threshold>0.4</weight_threshold>
      </filter:2>
      <filter:3>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>155</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0.5</weight_threshold>
      </filter:3>
      <filter:4>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>21</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0.5</weight_threshold>
      </filter:4>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <font_size>Normal (10pt)</font_size>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Fill>
  <check_border>FALSE</check_border>
  <fill_with_average_color>TRUE</fill_with_average_color>
  <four_pixel_connectivity>TRUE</four_pixel_connectivity>
  <size>0</size>
</Fill>
<Convex_Hull disabled/>
<Colorize>
  <rgb>#FFFFFF</rgb>
</Colorize>
<Harris_Corners disabled>
  <color_index>8</color_index>
  <fast_harris>TRUE</fast_harris>
  <harris_corners_array>TRUE</harris_corners_array>
  <isolation>1</isolation>
  <shape_index>3</shape_index>
  <size_index>1</size_index>
  <threshold>1</threshold>
  <use_color>FALSE</use_color>
  <use_non_maxima>TRUE</use_non_maxima>
</Harris_Corners>
<JScript_Program disabled>
  <auto_reload>TRUE</auto_reload>
  <continue_on_errors>FALSE</continue_on_errors>
  <script>function isWithinRange(x,y){

	var border = 15;


	if(y &gt; (GetVariable("IMAGE_HEIGHT")-border) || y &lt; border){
		return false;
	}
	if(x &gt; (GetVariable("IMAGE_WIDTH")-border) || x &lt; border){
		return false;
	}
	return true;
}

function calculateSlope(startX,startY,endX,endY){
	var rise = endY-startY;
  var run = endX-startX;
	return rise/run;
}

function calculateIntercept(startX,startY,endX,endY){
	var slope = calculateSlope(startX,startY,endX,endY);
	return ((slope*startX)-startY)*-1;
}


function getDistance(pX,pY,startX,startY,endX,endY){
	
   	var slope = calculateSlope(startX,startY,endX,endY);
    var intercept = calculateIntercept(startX,startY,endX,endY);
    
    var inverseSlope = -1/slope;
    var inverseIntercept = ((inverseSlope * pX) - pY)*-1;
    
    var xInt = (intercept - inverseIntercept)/(inverseSlope-slope);
   	var yInt = (slope*xInt) + intercept;
		var distance = sqrt((pX-xInt)*(pX-xInt) + (pY-yInt)*(pY-yInt));
		
		if(pY &lt; (slope*pX + intercept)){
			distance *= -1;
		}
	
	return distance;
}

var corners = GetArrayVariable("HARRIS_CORNERS");
var length = corners.length;

if(length &lt; 8){
	Write("Not enough corners");
	SetVariable("MAX_1_X", -1);
	SetVariable("MAX_1_Y", -1);
	SetVariable("MAX_2_X", -1);
	SetVariable("MAX_2_Y", -1);
	SetVariable("MAX_3_X", -1);
	SetVariable("MAX_3_Y", -1);
	SetVariable("MAX_4_X", -1);
	SetVariable("MAX_4_Y", -1);
	SetVariable("HAS_CORNERS", false);

} else {
	SetVariable("HAS_CORNERS", true);
	SetVariable("EDGE_PROXIMITY", false);


	var startX = GetVariable("HARRIS_CORNERS:0"); // corners[0];
	var startY = GetVariable("HARRIS_CORNERS:1"); //corners[1];
	var endX = GetVariable("HARRIS_CORNERS:" + (length-1)); //corners[length-1];
	var endY = GetVariable("HARRIS_CORNERS:" + (length-2)); //corners[length-2];
	
	var topLeftX = 0;
	var topRightX = 0;
	var botLeftX = 0;
	var botRightX = 0;
	var topLeftY = 0;
	var topRightY = 0;
	var botLeftY = 0;
	var botRightY = 0;

	
	for(var loop = 0; loop &lt; 3; loop ++){
	
		var maxDistance = 0;
		var minDistance = 0;
		var maxX = 0;
		var maxY = 0;
		var minX = 0;
		var minY = 0;

	
		for(var i = 0; i &lt; length; i += 2){
			corners[i] = GetVariable("HARRIS_CORNERS:" + i);
			corners[i+1] = GetVariable("HARRIS_CORNERS:" + (i+1));

	
			var distance = getDistance(corners[i], corners[i+1], startX, startY, endX, endY);
		
		
			if(distance &gt; maxDistance){
				maxDistance = distance;
				maxX = corners[i];
				maxY = corners[i+1];
			} else if (distance &lt; minDistance){
				minDistance = distance;
				minX = corners[i];
				minY = corners[i+1];
			}
		}
		
		startX = maxX;
		startY = maxY;
		endX = minX;
		endY = minY;
		
		//Write("Vals: (" + maxX + "," + maxY + "), (" + minX + "," + minY + ").\n");
		//Write("Eqn:   y=" + calculateSlope(maxX,maxY,minX,minY) + "x + " + calculateIntercept(maxX,maxY,minX,minY) + ".\n");
		
		if(loop == 1){
		
			// The greater XVal will always be on the right
			if(maxX &gt; minX){
				topRightX = maxX;
				topRightY = maxY;
				botLeftX = minX;
				botLeftY = minY;
			} else {
				topLeftX = maxX;
				topLeftY = maxY;
				botRightX = minX;
				botRightY = minY;
			}
		} else if(loop == 2){
		
			// The greater XVal will always be on the right
			if(topRightX == 0){
				topRightX = maxX;
				topRightY = maxY;
				botLeftX = minX;
				botLeftY = minY;
			} else {
				topLeftX = maxX;
				topLeftY = maxY;
				botRightX = minX;
				botRightY = minY;
			}
		}
		
		if(loop &gt;= 1){
			var num = (loop-1)*2
		
			//SetVariable("MAX_" + (1+num) + "_X", maxX);
			//SetVariable("MAX_" + (1+num) + "_Y", maxY);
			//SetVariable("MAX_" + (2+num) + "_X", minX);
			//SetVariable("MAX_" + (2+num) + "_Y", minY);
			//SetVariable("Corners" + loop, "Corners: (" + maxX + "," + maxY + "), (" + minX + "," + minY + ").");
			
			if(!isWithinRange(maxX,maxY) || !isWithinRange(minX,minY)){
				SetVariable("EDGE_PROXIMITY", true);
			}
			
		}
	}
	
	SetVariable("TOP_LEFT_X", topLeftX);		SetVariable("TOP_LEFT_Y", topLeftY);
	SetVariable("TOP_RIGHT_X", topRightX);	SetVariable("TOP_RIGHT_Y", topRightY);
	SetVariable("BOT_LEFT_X", botLeftX);		SetVariable("BOT_LEFT_Y", botLeftY);
	SetVariable("BOT_RIGHT_X", botRightX);	SetVariable("BOT_RIGHT_Y", botRightY);

	Write("TL: (" + topLeftX + "," + topLeftY + ")\n");
	Write("TR: (" + topRightX + "," + topRightY + ")\n");
	Write("BL: (" + botLeftX + "," + botLeftY + ")\n");
	Write("BR: (" + botRightX + "," + botRightY + ")\n");

}

SetVariable("COG_X", GetVariable("BLOBS:0")/GetVariable("IMAGE_WIDTH"));</script>
  <source_mode>gui</source_mode>
  <tab_size_index>1</tab_size_index>
</JScript_Program>
<Target_Localization>
  <center_map_on_robot>TRUE</center_map_on_robot>
  <center_on_robot>TRUE</center_on_robot>
  <color_index>3</color_index>
  <contrast_threshold>50</contrast_threshold>
  <display_as_annotation>FALSE</display_as_annotation>
  <enable_tracking>TRUE</enable_tracking>
  <field_of_view>67</field_of_view>
  <fill_target>FALSE</fill_target>
  <focal_length>1800</focal_length>
  <high_accuracy>TRUE</high_accuracy>
  <map_target_x>0</map_target_x>
  <map_target_y>0</map_target_y>
  <match_threshold>35</match_threshold>
  <max_change_distance>20</max_change_distance>
  <robot_color>3</robot_color>
  <route_color>3</route_color>
  <show_features>FALSE</show_features>
  <smoothing_size_index>2</smoothing_size_index>
  <target_real_height>14</target_real_height>
  <target_real_width>20</target_real_width>
  <target_template>.\TargetTemplate.gif</target_template>
  <template_image>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</template_image>
  <use_radian>FALSE</use_radian>
</Target_Localization>
<Display_Variables disabled>
  <border_color>red</border_color>
  <dim_background>TRUE</dim_background>
  <display_as_annotation>FALSE</display_as_annotation>
  <display_value_only>FALSE</display_value_only>
  <font_color>white</font_color>
  <font_size>Normal (10pt)</font_size>
  <north>TL_TARGET_DISTANCE
TL_TARGET_HORIZ_ANGLE
TL_TARGET_VERT_ANGLE
TL_Y_TRANSLATION
TL_X_TRANSLATION
</north>
  <northwest>TL_DETECTED
TL_COG_X
TL_COG_Y
TL_MATCH_SCORE
TL_ROBOT_X
TL_ROBOT_Y
TL_SCALE
</northwest>
  <west>TL_Z_ROTATION
TL_Y_ROTATION
TL_X_ROTATION
</west>
</Display_Variables>
<JScript_Program disabled>
  <auto_reload>TRUE</auto_reload>
  <continue_on_errors>FALSE</continue_on_errors>
  <script>Math.toRadians = function(angle) {
  return angle * (Math.PI / 180);
}

Math.toDegrees = function(radians) {
  return radians * 180 / Math.PI;
};

//CAMERA
var FOVdeg=67;
var FOV_PX = GetVariable("IMAGE_WIDTH");

// TARGET
var deltaX = GetVariable("BOT_RIGHT_X") - GetVariable("BOT_LEFT_X");
var deltaY = GetVariable("BOT_RIGHT_Y") - GetVariable("BOT_LEFT_Y");

var targetWidthPX = sqrt((deltaX*deltaX) + (deltaY*deltaY));
var targetWidthIN = 20;

Write(targetWidthPX + "|" + targetWidthIN + "\n");

//DISTANCE
var distance = targetWidthIN*FOV_PX/(2*targetWidthPX* Math.tan(Math.toRadians(FOVdeg/2)) );

Write("Distance: " + distance);</script>
  <source_mode>gui</source_mode>
  <tab_size_index>1</tab_size_index>
</JScript_Program>
<JScript_Program>
  <auto_reload>TRUE</auto_reload>
  <continue_on_errors>FALSE</continue_on_errors>
  <script>var y = GetVariable("TL_ROBOT_Y")*GetVariable("TL_ROBOT_Y") * 1.0;
var x = GetVariable("TL_ROBOT_X")*GetVariable("TL_ROBOT_X");
var dist = Math.sqrt(x+y);
dist = (4.7533*dist) - 74.949;
Write(GetVariable("TL_TARGET_DISTANCE"))

SetVariable("DISTANCE", dist);</script>
  <source_mode>gui</source_mode>
  <tab_size_index>1</tab_size_index>
</JScript_Program>
<NetworkTables>
  <delay>10</delay>
  <filter_type_index>0</filter_type_index>
  <hostname>localhost</hostname>
  <port>1735</port>
  <prefix>/RoboRealm/</prefix>
  <variables_to_send>BOT_LEFT_X
BOT_LEFT_Y
BOT_RIGHT_X
BOT_RIGHT_Y
COG_X
EDGE_PROXIMITY
HAS_CORNERS
TL_ROBOT_X
TL_ROBOT_Y
TL_TARGET_DISTANCE
TL_TARGET_HORIZ_ANGLE
TL_TARGET_VERT_ANGLE
TOP_LEFT_X
TOP_LEFT_Y
TOP_RIGHT_X
TOP_RIGHT_Y</variables_to_send>
  <variable_type_index>0</variable_type_index>
</NetworkTables>
<Display_Variables disabled>
  <border_color>red</border_color>
  <dim_background>TRUE</dim_background>
  <display_as_annotation>FALSE</display_as_annotation>
  <display_value_only>FALSE</display_value_only>
  <font_color>white</font_color>
  <font_size>Ginormous (48pt)</font_size>
  <southeast>DISTANCE
</southeast>
</Display_Variables>
